// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type File interface {
	IsFile()
}

type BasePaginationFilter struct {
	Count  *int `json:"count"`
	Offset *int `json:"offset"`
}

type DocumentReadable struct {
	ID          string  `json:"id"`
	Name        *string `json:"name"`
	Extension   *string `json:"extension"`
	ContentType *string `json:"contentType"`
	Blob        string  `json:"blob"`
	Size        int     `json:"size"`
	Preview     *string `json:"preview"`
}

func (DocumentReadable) IsFile() {}

type FileLink struct {
	ID          string  `json:"id"`
	Name        *string `json:"name"`
	Extension   *string `json:"extension"`
	ContentType *string `json:"contentType"`
	Link        string  `json:"link"`
}

func (FileLink) IsFile() {}

type Project struct {
	ID           string        `json:"id"`
	Name         string        `json:"name"`
	Description  *string       `json:"description"`
	Technologies []*Technology `json:"technologies"`
}

type ProjectFilter struct {
	Name         *string   `json:"name"`
	Technologies []*string `json:"technologies"`
	Count        *int      `json:"count"`
	Offset       *int      `json:"offset"`
}

type Technology struct {
	Name        string  `json:"name"`
	Description *string `json:"description"`
}
